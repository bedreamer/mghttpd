# Generated by Django 2.1.5 on 2019-03-21 12:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BMSGroupYaoce',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bmsid', models.IntegerField(default=0)),
                ('bmsgid', models.IntegerField(default=0)),
                ('tsp', models.DateTimeField(default='2018-01-01 00:00:00.000')),
                ('bat_gid_of_min_temp', models.IntegerField(default=0)),
                ('bat_gid_of_max_temp', models.IntegerField(default=0)),
                ('bat_gid_of_min_voltage', models.IntegerField(default=0)),
                ('bat_gid_of_max_voltage', models.IntegerField(default=0)),
                ('bat_min_temp', models.IntegerField(default=0)),
                ('bat_max_temp', models.IntegerField(default=0)),
                ('bat_min_voltage', models.IntegerField(default=0)),
                ('bat_max_voltage', models.IntegerField(default=0)),
                ('SOC', models.IntegerField(default=0)),
                ('SOH', models.IntegerField(default=0)),
                ('chargable_kwh', models.IntegerField(default=0)),
                ('dischargable_kwh', models.IntegerField(default=0)),
                ('status', models.IntegerField(default=0)),
                ('voltage', models.IntegerField(default=0)),
                ('current', models.IntegerField(default=0)),
                ('total_charged_kwh', models.IntegerField(default=0)),
                ('total_discharged_kwh', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'BMSGroupYaoce',
            },
        ),
        migrations.CreateModel(
            name='BMSYaoce',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bmsid', models.IntegerField(default=0)),
                ('tsp', models.DateTimeField(default='2018-01-01 00:00:00.000')),
                ('bat_gid_of_min_temp', models.IntegerField(default=0)),
                ('bat_gid_of_max_temp', models.IntegerField(default=0)),
                ('bat_gid_of_min_voltage', models.IntegerField(default=0)),
                ('bat_gid_of_max_voltage', models.IntegerField(default=0)),
                ('bat_min_temp', models.IntegerField(default=0)),
                ('bat_max_temp', models.IntegerField(default=0)),
                ('bat_min_voltage', models.IntegerField(default=0)),
                ('bat_max_voltage', models.IntegerField(default=0)),
                ('SOC', models.IntegerField(default=0)),
                ('SOH', models.IntegerField(default=0)),
                ('chargable_kwh', models.IntegerField(default=0)),
                ('dischargable_kwh', models.IntegerField(default=0)),
                ('status', models.IntegerField(default=0)),
                ('voltage', models.IntegerField(default=0)),
                ('current', models.IntegerField(default=0)),
                ('total_charged_kwh', models.IntegerField(default=0)),
                ('total_discharged_kwh', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'BMSYaoce',
            },
        ),
        migrations.CreateModel(
            name='Collector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.TextField(default='invalid', help_text='数据点路径')),
            ],
        ),
        migrations.CreateModel(
            name='CurrentError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ueid', models.CharField(help_text='故障唯一ID号，和历史故障ID号公用', max_length=30)),
                ('ecode', models.TextField(help_text='故障代码')),
                ('abstrct', models.TextField(help_text='故障摘要信息')),
                ('econtext', models.TextField(help_text='故障详细内容，存储格式为json')),
                ('eclass', models.CharField(help_text='故障类型', max_length=100)),
                ('elevel', models.IntegerField(help_text='故障级别')),
                ('etsp', models.DateTimeField(default='2018-01-01 00:00:00', help_text='故障产生时间')),
            ],
            options={
                'db_table': 'CurrentError',
            },
        ),
        migrations.CreateModel(
            name='DataPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(default='完整名称', help_text='这个数据点的完整名称', max_length=200)),
                ('short_name', models.CharField(default='名称', help_text='这个数据点的短名称', max_length=100)),
                ('access_path', models.TextField(help_text='访问路径')),
                ('k', models.FloatField(default=1.0, help_text='数据点斜率')),
                ('b', models.FloatField(default=0, help_text='数据点偏移')),
                ('mask', models.IntegerField(default=2147483647, help_text='数据点值掩码')),
                ('dot', models.IntegerField(default=0, help_text='小数点位数')),
                ('unit', models.CharField(blank=True, default='', help_text='这个值的显示单位符号', max_length=20)),
                ('max_record', models.IntegerField(default=1, help_text='这个数据点的最大记录条数')),
                ('refer_count', models.IntegerField(default=0, help_text='这个数据点在系统中被引用的次数')),
            ],
        ),
        migrations.CreateModel(
            name='DataPointRecords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default='2018-01-01 00:00:00', help_text='记录存储时间')),
                ('record', models.TextField(blank=True, help_text='记录的数据，用json存储', null=True)),
                ('collector', models.ForeignKey(help_text='记录的数据点ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='ui.Collector')),
            ],
        ),
        migrations.CreateModel(
            name='DataPointType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='类型', help_text='数据点类型', max_length=100)),
                ('name', models.CharField(default='名称', help_text='类型名称', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='名称', help_text='这个元素的名称', max_length=40)),
                ('order', models.IntegerField(default=0, help_text='这个值的显示顺序')),
                ('count', models.IntegerField(default=1, help_text='显示的数据点个数，用于图表显示')),
                ('display', models.BooleanField(default=True, help_text='这个值是否能够显示')),
                ('datapoint', models.ManyToManyField(help_text='数据点列表', to='ui.DataPoint')),
            ],
        ),
        migrations.CreateModel(
            name='ElementType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='类型', help_text='显示元素类型', max_length=100)),
                ('name', models.CharField(default='名称', help_text='显示元素类型名称', max_length=100)),
                ('width', models.IntegerField(default=12, help_text='这个元素类型的参数值， 主要用于图表宽度确定')),
            ],
        ),
        migrations.CreateModel(
            name='HistoryError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ueid', models.CharField(help_text='故障唯一ID号，从当前故障号继承', max_length=30)),
                ('ecode', models.TextField(help_text='故障代码')),
                ('abstrct', models.TextField(help_text='故障摘要信息')),
                ('econtext', models.TextField(help_text='故障详细内容，存储格式为json')),
                ('eclass', models.CharField(help_text='故障类型', max_length=100)),
                ('elevel', models.IntegerField(help_text='故障级别')),
                ('etsp_begin', models.DateTimeField(default='2018-01-01 00:00:00', help_text='故障产生时间')),
                ('etsp_end', models.DateTimeField(default='2018-01-01 00:00:00', help_text='故障处理时间')),
                ('econfirm_tsp', models.DateTimeField(default='2018-01-01 00:00:00', help_text='故障确认时间')),
                ('econfirm_user', models.CharField(default='nobody', help_text='故障确认人员', max_length=100)),
                ('econfirm_sign', models.TextField(help_text='故障确认签名及原因备注说明')),
            ],
            options={
                'db_table': 'HistoryError',
            },
        ),
        migrations.CreateModel(
            name='HistoryRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(default='system', help_text='类型名称', max_length=60)),
                ('code', models.IntegerField(blank=True, default=0, help_text='事件代码', null=True)),
                ('datetime', models.DateTimeField(default='2018-01-01 00:00:00.000', help_text='事件产生时戳')),
                ('master', models.IntegerField(blank=True, default=0, help_text='设备主索引号', null=True)),
                ('slave', models.IntegerField(blank=True, default=0, help_text='设备次索引号', null=True)),
                ('body', models.TextField(default='无', help_text='事件内容')),
                ('user', models.CharField(default='root', help_text='事件记录人', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='[页面标题]', help_text='页面标题内容', max_length=100)),
                ('name', models.CharField(default='[页面名称]', help_text='页面名称内容', max_length=20)),
                ('devicesn', models.IntegerField(default=0, help_text='设备索引编号')),
                ('template', models.TextField(default='default.html', help_text='页面的模板文件')),
                ('jsfiles', models.TextField(blank=True, default='', help_text='这个页面的js文件列表')),
                ('cssfiles', models.TextField(blank=True, default='', help_text='这个页面的css文件列表')),
                ('display', models.BooleanField(default=True, help_text='控制这个页面是否能显示出来')),
                ('display_order', models.IntegerField(default=0, help_text='这个页面在显示栏中的索引位置')),
                ('json', models.TextField(blank=True, help_text='这个页面需要带给js的json数据内容')),
            ],
        ),
        migrations.CreateModel(
            name='PCSYaoce',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pcsid', models.IntegerField(default=0)),
                ('tsp', models.DateTimeField(default='2018-01-01 00:00:00.000')),
                ('dc_power', models.IntegerField(default=0)),
                ('dc_voltage', models.IntegerField(default=0)),
                ('dc_current', models.IntegerField(default=0)),
                ('grid_freq', models.IntegerField(default=0)),
                ('Vab', models.IntegerField(default=0)),
                ('Vbc', models.IntegerField(default=0)),
                ('Vca', models.IntegerField(default=0)),
                ('Ia', models.IntegerField(default=0)),
                ('Ib', models.IntegerField(default=0)),
                ('Ic', models.IntegerField(default=0)),
                ('year_discharge_kwh_total', models.IntegerField(default=0)),
                ('year_discharge_time_total', models.IntegerField(default=0)),
                ('charge_kwh_total', models.IntegerField(default=0)),
                ('discharge_kwh_total', models.IntegerField(default=0)),
                ('day_charge_kwh_total', models.IntegerField(default=0)),
                ('day_discharge_kwh_total', models.IntegerField(default=0)),
                ('day_charge_time_total', models.IntegerField(default=0)),
                ('day_discharge_time_total', models.IntegerField(default=0)),
                ('month_charge_kwh_total', models.IntegerField(default=0)),
                ('month_discharge_kwh_total', models.IntegerField(default=0)),
                ('month_charge_time_total', models.IntegerField(default=0)),
                ('month_discharge_time_total', models.IntegerField(default=0)),
                ('charge_count', models.IntegerField(default=0)),
                ('discharge_count', models.IntegerField(default=0)),
                ('year_charge_time_total', models.IntegerField(default=0)),
                ('year_charge_kwh_total', models.IntegerField(default=0)),
                ('charge_time_total', models.IntegerField(default=0)),
                ('discharge_time_total', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'PCSYaoce',
            },
        ),
        migrations.CreateModel(
            name='SystemRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField(default='untitled', help_text='键名', max_length=100)),
                ('value', models.TextField(default='value', help_text='键值', max_length=4096)),
            ],
        ),
        migrations.CreateModel(
            name='UserDefinedGrid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='default name', max_length=1024)),
                ('enabled', models.BooleanField(default=True)),
                ('born', models.DateTimeField(default='2019-01-01 00:00:00')),
                ('target', models.CharField(default='None', max_length=100)),
                ('json_data', models.TextField(default='')),
            ],
            options={
                'db_table': 'UserDefinedGrid',
            },
        ),
        migrations.AddField(
            model_name='element',
            name='page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ui.Page'),
        ),
        migrations.AddField(
            model_name='element',
            name='type',
            field=models.ForeignKey(help_text='这个元素的类型', on_delete=django.db.models.deletion.CASCADE, to='ui.ElementType'),
        ),
        migrations.AddField(
            model_name='datapoint',
            name='datatype',
            field=models.ForeignKey(help_text='这个数据点的类型', on_delete=django.db.models.deletion.CASCADE, to='ui.DataPointType'),
        ),
    ]
